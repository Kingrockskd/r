{"version":3,"sources":["components/Card.js","components/Output.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","clases","className","children","Output","recipe","i_a","ingredientLines","useState","show","setShow","console","log","useEffect","label","src","image","onClick","e","preventDefault","map","Math","random","calories","App","input","setInput","query","setQuery","result","setResult","a","fetch","r","json","re","hits","type","placeholder","onChange","target","value","ob_e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAOeA,MALf,SAAcC,GACV,IAAMC,EAAO,QAAQD,EAAME,UAC3B,OAAO,qBAAKA,UAAWD,EAAhB,SAAyBD,EAAMG,YC+B3BC,MAjCf,YAA0B,IAATC,EAAQ,EAARA,OAGPC,EAAID,EAAOE,gBACjB,EAAqBC,qBAASH,GAA9B,mBAAOI,EAAP,KAAYC,EAAZ,KAQJ,OAPIC,QAAQC,IAAIH,GACbI,qBAAU,WACNH,GAAQ,KACT,CAACL,IAKF,eAAC,EAAD,WACE,8BACA,oBAAIH,UAAU,QAAd,SAAuBG,EAAOS,UAE9B,qBAAKZ,UAAU,QAAf,SACA,qBAAKa,IAAKV,EAAOW,UAGhB,wBAAQC,QAZf,SAAeC,GAAGA,EAAEC,iBAChBT,GAASD,IAWN,SAAyBA,EAAK,OAAO,gBACpCA,EAAM,8BACH,6BAEIH,EAAIc,KAAI,SAAAF,GAAC,OACL,mCAA0BA,IAAjBG,KAAKC,iBAGlBX,QAAQC,IAAI,QAhBZP,EAAOkB,WC+BRC,MA1Cf,WACE,IAGA,EAA0BhB,mBAAS,IAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KACA,EAA0BlB,mBAAS,aAAnC,mBAAOmB,EAAP,KAAcC,EAAd,KACA,EAA4BpB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeC,EAAf,KAqBA,OAZAjB,oBAAS,sBAAC,8BAAAkB,EAAA,+EAEUC,MAAM,mCAAD,OAAoCL,EAApC,mBAhBX,WAgBW,oBAfV,qCAaL,cAEAM,EAFA,gBAGWA,EAAEC,OAHb,OAGAC,EAHA,OAINL,EAAUK,EAAGC,MAJP,kDAQNzB,QAAQC,IAAR,MARM,0DAUP,CAACe,IACJhB,QAAQC,IAAIiB,GAEV,gCAAM,sBAAK3B,UAAU,OAAf,UACV,0CACM,sBAAKA,UAAU,MAAf,UACA,uBAAOmC,KAAK,OAAOC,YAAY,6BAA6BC,SAAU,SAACrB,GAAD,OAAOQ,EAASR,EAAEsB,OAAOC,QAAQA,MAAOhB,IAC9G,wBAAQR,QAxBK,SAACC,GAChBA,EAAEC,iBACFS,EAASH,GACTC,EAAS,KAqBP,+BAGA,qBAAKxB,UAAU,QAAf,SACE2B,EAAOT,KAAI,SAACsB,GAAD,OAAQ,cAAC,EAAD,CAAQrC,OAAQqC,EAAKrC,kBC5BjCsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.60f71e99.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.css'\r\nfunction Card(props){\r\n    const clases='card '+props.className;\r\n    return(<div className={clases}>{props.children}</div>);\r\n\r\n}\r\nexport default Card;","import React,{useState,useEffect} from 'react'\r\nimport Card from './Card'\r\nfunction Output({recipe}){\r\n    /* ingredients,label,image\r\n     const [show,setShow]=useState(false) */\r\n    const i_a=recipe.ingredientLines;\r\n    const [show,setShow]=useState(recipe?true:false)\r\n    console.log(show);\r\n   useEffect(() => {\r\n       setShow(false)\r\n   }, [recipe])\r\n function togle(e){e.preventDefault();\r\n     setShow(!show)} \r\n    \r\nreturn(\r\n     <Card key={recipe.calories}>\r\n       <div>\r\n       <h1 className='title'>{recipe.label}</h1>\r\n       </div>\r\n       <div className='image'>\r\n       <img src={recipe.image}></img>\r\n       </div> \r\n        \r\n        <button onClick={togle}>{show?'Hide':'ingredients'}</button>\r\n        {show?(<div >\r\n            <ol>\r\n            {\r\n                i_a.map(e=>\r\n                    <li key={Math.random()}> {e}</li>)\r\n            }\r\n            </ol>\r\n        </div>):console.log('ok')}\r\n    </Card> \r\n)\r\n}\r\nexport default Output;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Output from './components/Output'\n\nfunction App() {\n  const appId = \"3485af7b\"\n  const appKey = \"4181f78703f7a7f6fb13340282221dd4\"\n\n  const [input, setInput] = useState('')\n  const [query, setQuery] = useState('chocolate')\n  const [result, setResult] = useState([])\n  \n  const reSearch = (e) => {\n    e.preventDefault();\n    setQuery(input)\n    setInput('')\n    \n  }\n\n  useEffect(async () => {\n    try {\n      const r = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${appId}&app_key=${appKey}`);\n      const re = await r.json();\n      setResult(re.hits)\n   \n   }\n    catch (er) {\n      console.log(er)\n    }\n  }, [query]);\n  console.log(result)\n  return (\n    <div ><div className='head'>\n<h2>HEllo KD</h2>\n      <div className='nav'>\n      <input type='text' placeholder='Type your faourite dish...' onChange={(e) => setInput(e.target.value)} value={input}></input>\n      <button onClick={reSearch}>search now!</button>\n      </div>\n    </div>\n      <div className='bodyl'>\n      { result.map((ob_e)=><Output recipe={ob_e.recipe}/>)\n      } \n    </div></div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}